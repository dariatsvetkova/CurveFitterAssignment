// <auto-generated />
using System;
using CurveFitter.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CurveFitter.Server.Migrations
{
    [DbContext(typeof(ArchiveContext))]
    [Migration("20240124164011_testMigration2")]
    partial class testMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("CurveFitter.Server.Archive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Equation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FitType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Archives");
                });

            modelBuilder.Entity("CurveFitter.Server.DataPoint", b =>
                {
                    b.Property<int>("X")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArchiveId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArchiveId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("X");

                    b.HasIndex("ArchiveId");

                    b.HasIndex("ArchiveId1");

                    b.ToTable("DataPoint");
                });

            modelBuilder.Entity("CurveFitter.Server.DataPoint", b =>
                {
                    b.HasOne("CurveFitter.Server.Archive", null)
                        .WithMany("FitDataPoints")
                        .HasForeignKey("ArchiveId");

                    b.HasOne("CurveFitter.Server.Archive", null)
                        .WithMany("UserDataPoints")
                        .HasForeignKey("ArchiveId1");
                });
#pragma warning restore 612, 618
        }
    }
}
